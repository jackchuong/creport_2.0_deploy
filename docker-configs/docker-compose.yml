version: '3'

services:
  mongo:
    image: mongo:6.0.2
    container_name: mongo
    restart: always
    environment:
      - TZ=Asia/Ho_Chi_Minh
    volumes:
      - ./dbdata:/data/db
      - ./mongobackups:/var/backups/mongobackups
    ports:
      - 27017:27017
    networks:
      - creportnet

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    environment:
      - TZ=Asia/Ho_Chi_Minh
    #env_file:
    #  - .env
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    command: "/bin/sh -c 'while :; do sleep 24h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - creportnet

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    environment:
      - TZ=Asia/Ho_Chi_Minh
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 24h & wait $${!}; done;'"
    networks:
      - creportnet

  api:
    image: 121427815363.dkr.ecr.ap-southeast-1.amazonaws.com/creport:api-mainnet-1.0.0
    container_name: api
    ports:
      - 3000:3000
    restart: always
    environment:
      - TZ=Asia/Ho_Chi_Minh
    env_file:
      - .env
    command: "/bin/sh -c 'cd /app/api ; node dist/main'"
    networks:
      - creportnet

networks:
  creportnet:
    name: creportnet
    driver: bridge
